import React, { useState } from 'react';
import VulnerabilityTable from './VulnerabilityTable';

const ApplicationVulnerabilityDropdown = () => {
  const [isOpen, setIsOpen] = useState(false);

  const toggleSection = () => {
    setIsOpen(!isOpen);
  };

  return (
    <div>
      <h2 
        onClick={toggleSection}
        style={{ cursor: 'pointer' }}
      >
        Application-Specific Vulnerabilities {isOpen ? 'â–¼' : 'â–¶'}
      </h2>
      {isOpen && (
        <>
          <p>
            The table below shows common vulnerabilities across different LLM application types. 
            A ðŸš¨ indicates that the vulnerability is typically applicable to that application type, 
            while a âœ… means it is generally not a concern for that type of application.
          </p>
          <VulnerabilityTable />
          <p style={{ marginTop: '1rem' }}>
            Note that your mileage will vary based on your specific use case. 
            Most applications are a combination of the above!
          </p>
        </>
      )}
    </div>
  );
};

export default ApplicationVulnerabilityDropdown; 