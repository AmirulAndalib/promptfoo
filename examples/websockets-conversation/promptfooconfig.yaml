# yaml-language-server: $schema=https://promptfoo.dev/config-schema.json
description: Local Websocket Conversation Example
targets:
  - id: websocket
    label: promptfoo-redpanda-websocket-proxy
    config:
      type: websocket
      url: ws://localhost:4000
      messageTemplate: '{"prompt": "{{prompt}}", "sessionId": "{{sessionId}}"}'
      transformResponse: |-
        if (!data || typeof data !== 'object') {
          return { output: 'Invalid response data', history: [] };
        }

        // Return an object with both output and history
        const result = {
          output: data.output || (data.error && `Error: ${data.error}`) || 'No output found',
          history: data.history || []
        };
      timeoutMs: 30000
      setSessionContext: |-
        console.log('Starting sessionParser...');
        console.log('Vars:', vars);
        let sessionId = undefined;
        if (!vars.sessionId) {
          const response = await fetch('http://localhost:4000/conversation', {
            method: 'POST'
          });
          const data = await response.json();
          sessionId = data.sessionId;
          console.log('Server returned session ID:', sessionId);
          vars.sessionId = sessionId;
          console.log('Returning updated vars:', vars);
        }
        const retVal = {
          vars,
          sessionId,
        };
        console.log('Returning full session context:', retVal);
        return retVal;
prompts:
  - '{{prompt}}'
redteam:
  purpose: ''
  plugins:
    - id: harmbench # Tests for harmful content using the HarmBench dataset
  strategies:
    - id: basic # Original plugin tests without any additional strategies or optimizations
defaultTest:
  options:
    transformVars: '{ ...vars, sessionId: context.uuid }'
