# yaml-language-server: $schema=https://promptfoo.dev/config-schema.json

# Define the prompt template
prompts:
  - id: chat-prompt
    label: Chat Message
    raw: '{{ question }}'

# Define the provider configuration
providers:
  - id: websocket
    config:
      type: websocket
      url: ws://localhost:4000
      maintainConnectionBetweenCalls: true
      timeoutMs: 30000 # Set to 30 seconds
      messageTemplate: '{"prompt": "{{ prompt }}", "conversationId": "{{ conversationId }}"}'
      beforeConnect: |
        console.log('Starting beforeConnect...');
        const response = await fetch('http://localhost:4000/conversation', {
          method: 'POST'
        });
        const data = await response.json();
        console.log('Server returned conversation ID:', data.conversationId);
        const context = { conversationId: data.conversationId };
        console.log('Returning context:', context);
        return context;
      transformResponse: |
        if (!data || typeof data !== 'object') {
          return { output: 'Invalid response data', history: [] };
        }

        // Return an object with both output and history
        const result = {
          output: data.output || (data.error && `Error: ${data.error}`) || 'No output found',
          history: data.history || []
        };

        return result;

# Test multi-turn conversations
tests:
  # Example 1: Using server-generated conversation IDs
  - vars:
      question: Tell me about the weather
  - vars:
      question: What about tomorrow?

  # Example 2: Using client-specified conversation IDs
  - vars:
      question: What is this project about?
      conversationId: project_thread
  - vars:
      question: Can you give me some examples of its usage?
      conversationId: project_thread
  - vars:
      question: How does it handle errors?
      conversationId: project_thread

  # Example 3: Another client-specified conversation
  - vars:
      question: What are the main features?
      conversationId: features_thread
  - vars:
      question: Tell me more about the testing capabilities.
      conversationId: features_thread

  Verify responses
  - description: Test response format and history
    vars:
      question: How does conversation history work?
      conversationId: history_thread
