# .github/workflows/pypi-release.yml
name: PyPI Release
run-name: PyPI Release for ${{ github.ref_name }} by @${{ github.actor }}

on:
  workflow_run:
    workflows: ['Nexe Build']
    types:
      - completed
  workflow_dispatch:

jobs:
  publish-pypi:
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
      - name: Get package version from pyproject.toml
        id: get_version
        run: |
          VERSION=$(poetry version --short)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
      - name: Download Nexe Artifacts
        uses: actions/download-artifact@v4
        with:
          name: promptfoo-*
          # Download all artifacts matching the pattern
      - name: Prepare Package
        run: |
          mkdir -p src/your_package/bin
          mv promptfoo-* src/your_package/bin/
      - name: Verify Git Tag
        run: |
          git fetch --tags
          TAG_EXISTS=$(git tag -l "v${{ steps.get_version.outputs.version }}" | wc -l)
          if [ "$TAG_EXISTS" -eq "0" ]; then
            echo "Git tag v${{ steps.get_version.outputs.version }} does not exist. Exiting."
            exit 1
          fi
      - name: Build Package
        run: poetry build
      - name: Publish to PyPI
        env:
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
        run: |
          poetry config pypi-token.pypi $PYPI_TOKEN
          poetry publish --no-interaction --username __token__ --password $PYPI_TOKEN
